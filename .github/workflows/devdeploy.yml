name: Dev ADF

on: 
  pull_request:
    branches:
      - dev
      
permissions:
      id-token: write
      contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Validate
        run: npm run build validate ${{github.workspace}}/ADFroot/ /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.DEVRESOURCEGROUP }}/providers/Microsoft.DataFactory/factories/${{ secrets.DEVADF }} # (2) The validate command needs the root folder location of your repository where all the objects are stored. And the 2nd parameter is the resourceID of the ADF instance 
        working-directory: ${{github.workspace}}/ADFroot/build
 

      - name: Validate and Generate ARM template
        run: npm run build export ${{github.workspace}}/ADFroot/ /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.DEVRESOURCEGROUP }}/providers/Microsoft.DataFactory/factories/${{ secrets.DEVADF }} "ExportedArmTemplate"  # (3) The build command, as validate, needs the root folder location of your repository where all the objects are stored. And the 2nd parameter is the resourceID of the ADF instance. The 3rd parameter is the exported ARM template artifact name 
        working-directory: ${{github.workspace}}/ADFroot/build
 
# In order to leverage the artifact in another job, we need to upload it with the upload action 
      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ExportedArmTemplate # (4) use the same artifact name you used in the previous export step
          path: ${{github.workspace}}/ADFroot/build/ExportedArmTemplate
        
      - name: Login via Az module
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true 

      - name: data-factory-deploy
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          resourceGroupName: ${{ secrets.DEVRESOURCEGROUP }} # (6) your target ADF resource group name
          dataFactoryName: ${{ secrets.DEVADF }} # (7) your target ADF name
      
